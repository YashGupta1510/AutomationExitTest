<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-13T12:49:05 IST" name="Suite" finished-at="2024-06-13T12:49:57 IST" duration-ms="51812">
    <groups>
      <group name="UITest">
        <method signature="HomePageTest.homePageLogo()[pri:0, instance:HomePageTest@287f7811]" name="homePageLogo" class="HomePageTest"/>
        <method signature="HomePageTest.homePageLogoFail()[pri:0, instance:HomePageTest@287f7811]" name="homePageLogoFail" class="HomePageTest"/>
      </group> <!-- UITest -->
    </groups>
    <test started-at="2024-06-13T12:49:05 IST" name="Test" finished-at="2024-06-13T12:49:57 IST" duration-ms="51812">
      <class name="HomePageTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:HomePageTest@287f7811]" started-at="2024-06-13T12:49:05 IST" name="setup" finished-at="2024-06-13T12:49:05 IST" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:HomePageTest@287f7811]" started-at="2024-06-13T12:49:05 IST" name="setup" finished-at="2024-06-13T12:49:28 IST" duration-ms="23378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void HomePageTest.homePageLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="homePageLogo()[pri:0, instance:HomePageTest@287f7811]" started-at="2024-06-13T12:49:28 IST" name="homePageLogo" finished-at="2024-06-13T12:49:28 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homePageLogo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:HomePageTest@287f7811]" started-at="2024-06-13T12:49:28 IST" name="getResult" finished-at="2024-06-13T12:49:29 IST" duration-ms="625" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=homePageLogo status=SUCCESS method=HomePageTest.homePageLogo()[pri:0, instance:HomePageTest@287f7811] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:HomePageTest@287f7811]" started-at="2024-06-13T12:49:29 IST" name="setup" finished-at="2024-06-13T12:49:56 IST" duration-ms="26942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void HomePageTest.homePageLogoFail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="homePageLogoFail()[pri:0, instance:HomePageTest@287f7811]" started-at="2024-06-13T12:49:56 IST" name="homePageLogoFail" finished-at="2024-06-13T12:49:56 IST" duration-ms="36" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Made to fail] but found [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Made to fail] but found [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at HomePageTest.homePageLogoFail(HomePageTest.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homePageLogoFail -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:HomePageTest@287f7811]" started-at="2024-06-13T12:49:56 IST" name="getResult" finished-at="2024-06-13T12:49:57 IST" duration-ms="471" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=homePageLogoFail status=FAILURE method=HomePageTest.homePageLogoFail()[pri:0, instance:HomePageTest@287f7811] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="finishReport()[pri:0, instance:HomePageTest@287f7811]" started-at="2024-06-13T12:49:57 IST" name="finishReport" finished-at="2024-06-13T12:49:57 IST" duration-ms="335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finishReport -->
      </class> <!-- HomePageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
